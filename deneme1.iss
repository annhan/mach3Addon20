; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "Gnexlab_Mach3_Addon"
#define MyAppVersion "1.3"
#define MyAppPublisher "Gnexlab"
#define MyAppURL "http://cnc2printer3d.wordpress.com/"
#define MyAppExeName "gnexlab_open_dialog.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{312C5E62-4CAC-4BCA-B87B-8E04732DCDCF}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=c:\{#MyAppName}
DisableDirPage=yes
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
OutputBaseFilename=setup
Compression=lzma
SolidCompression=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
Source: "D:\Projects\Mach3_Addon\setup1.3\3dprinter_addon\gnexlab_open_dialog.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\Projects\Mach3_Addon\setup1.3\dist\*"; DestDir: "{app}\dist"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "D:\Projects\Mach3_Addon\setup1.3\3dprinter_addon\*"; DestDir:  "{code:GetDataDir}\Addons\3dprinter_addon_1.3"; Flags: ignoreversion
Source: "D:\Projects\Mach3_Addon\setup1.3\3dprinter_addon\Bitmaps\*"; DestDir:  "{code:GetDataDir}\Addons\3dprinter_addon_1.3\Bitmaps"; Flags: ignoreversion


; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"


[Dirs]
Name: {code:GetDataDir}; Flags: uninsneveruninstall

[Code]
var
  DataDirPage: TInputDirWizardPage;
  
procedure InitializeWizard;
begin
  { Create the pages }


  DataDirPage := CreateInputDirPage(wpSelectDir,
    'Select Mach3 Directory', '',
    'Please select the folder in which Mach3 Software installed, then click Next.',
    False, '');
  DataDirPage.Add('');

  { Set default values, using settings that were stored last time if possible }
   
  
  DataDirPage.Values[0] := GetPreviousData('DataDir', '');
end;

procedure RegisterPreviousData(PreviousDataKey: Integer);
  
begin
  { Store the settings so we can restore them next time }
  SetPreviousData(PreviousDataKey, 'DataDir', DataDirPage.Values[0]);
end;

function GetDataDir(Param: String): String;
begin
  { Return the selected DataDir }
  Result := DataDirPage.Values[0];
end;




